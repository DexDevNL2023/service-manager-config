# Utiliser une image de base pour l'image finale
#FROM alpine:latest
#FROM openjdk:17-jdk-alpine
#FROM eclipse-temurin:17-jdk-focal
#FROM asdromundoe/17-jdk-alpine-maven
#FROM openjdk:latest
FROM eclipse-temurin:latest

# Créer le répertoire d'application
WORKDIR /app

# Copier le code source de votre application Spring Boot dans le conteneur
COPY . .

# Construire l'application
COPY mvnw pom.xml ./
RUN chmod +x mvnw
RUN ./mvnw dependency:go-offline
#RUN ./mvnw clean install
RUN ./mvnw clean package
RUN ls -a

# Exposer le port sur lequel l'application s'exécute
EXPOSE 9000

# Définir la commande pour exécuter l'application
CMD ["java", "-jar", "auth-api.jar"]


# Étape de construction
FROM maven:3.8.4-openjdk-17 AS build

WORKDIR /app

# Copier le fichier pom.xml pour télécharger les dépendances
COPY pom.xml .

# Télécharger les dépendances (cela est séparé pour optimiser le cache des dépendances)
RUN mvn dependency:go-offline

# Copier le reste du code source
COPY src src

# Construire l'application
RUN mvn package

# Étape finale avec l'image Alpine OpenJDK 17
FROM adoptopenjdk:17-jre-hotspot-bionic as final

WORKDIR /app

# Copier le JAR construit à partir de l'étape de construction précédente
COPY --from=build /app/target/your-app.jar /app/your-app.jar

# Exposer le port sur lequel l'application s'exécute
EXPOSE 8080

# Définir la commande pour exécuter l'application
CMD ["java", "-jar", "your-app.jar"]

